import json

def process_line(line):
    try:
        data = json.loads(line)
        # Replace 'your_key' with the specific key you want to extract
        value = data.get('your_key')
        if value is not None:
            print(f"Extracted value: {value}")
    except json.JSONDecodeError:
        # Ignore lines that are not in JSON format
        pass

def read_last_lines(file_path, num_lines):
    try:
        with open(file_path, 'r') as file:
            lines = file.readlines()[-num_lines:]
            for line in lines:
                # Add your custom patterns to filter lines here
                if 'your_pattern' in line:
                    process_line(line.strip())
    except FileNotFoundError:
        print(f"File not found: {file_path}")

if __name__ == "__main__":
    log_file_path = '/path/to/your/log/file.log'
    num_lines = 10  # Number of last lines to read initially

    read_last_lines(log_file_path, num_lines)
